package days15;

/**
 * @author jyoon
 * @date 2024. 7. 19. - 오후 2:47:18
 * @content [인터페이스(interface)]
 * @subject                       
 *                        
 *
 */

public class Ex07 {
	
	public static void main(String[] args) {

		/*
		 * 
		 * [인터페이스]
		 * 1. 자바 자료형 - 참조타입: 배열, 클래스, [인터페이스]
		 * 2. 일종의 추상클래스이다.
		 * 3. 필드 선언 X
		 * 		일반 메서드 선언 X
		 * 
		 * 		상수 선언
		 * 		추상 메서드만 선언.
		 * 		 +
		 * 		[JDK 1.8부터 추가]
		 * 		static 메서드
		 * 		default 메서드
		 * 	
		 * 4. 추상클래스 - 미완성 설계도 -> 구현한 자식클래스
		 * 		인터페이스 - 기본 설계도(밑그림) -> 구현한 자식클래스
		 * 		: 그 자체만으로 사용되기 보다는 다른 클래스를 작성하는데 도움을 주는 목적으로 사용된다.
		 * 
		 * 5. 인터페이스 선언 형식
		 * 		[public or default] interface [인]터페이스 이름 {
		 * 			상, 추메, d메, s메
		 * 		}
		 * 
		 * 6. 인터페이스 안의 모든 멤버는 자동으로 public이 붙고 static final이 붙는다.
		 * 		public static final 생략
		 * 		public abstract 생략 (추상메서드는 굳이 안써도 됨 생략)
		 * 
		 * 7. 인터페이스 끼리 상속이 가능하다.
		 * 		(extends 키워드 사용)
		 * 
		 * 8. 인터페이스를 사용하면 다중 상속이 가능하다.
		 * 
		 * 9. 클래스 implements 인터페이스
		 * 					(구현)
		 *
		 * 10. 인터페이스의 장점.
		 * 		1) 개발 시간을 단축시킬 수 있다. (메서드를 실질적으로 구현해내지 않아도 구현해 나갈 수 있다.)
		 * 		메서드의 내용 상관 없이 메서드 호출해서 사용가능
		 * 		2) 표준화가 가능하다.
		 * 		3) 서로 관계없는 클래스들일지라도 implement를 통해 관계를 맺어줄 수 있다. //Movable.java 수리하는 메서드 추가 부분
		 *	    4) 독립적인 프로그래밍이 가능하다.
		 * 	
		 */
		
		
		
	} // main
	
} // class









