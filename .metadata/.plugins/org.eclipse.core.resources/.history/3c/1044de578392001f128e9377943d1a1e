package days03;

/**
 * @author jyoon
 * @date 2024. 7. 3. - 오후 3:59:00
 * @subject 논리연산자
 * @content 참/거짓
 * 				1) 일반 논리 연산자
 * 
 * 					ㄱ. && 일반 논리 AND 연산자 (논리곱 연산자라고 하기도 한다.)
 * 						두 연산자가 모두 참일 때만 참이 된다.
 * 					true && true => true
 * 					true && false => false
 *  				false && true => false
 *   				false && false => false
 * 
 * 					ㄴ. || 일반 논리 OR 연산자
 * 							
 * 					true || true => true
 * 					true || false => true
 *  				false || true => true
 *   				false || false => false
 *   				둘 다 거짓이면 거짓이다. (하나만 참이여도 참)
 *   
 * 					ㄷ.  ! 부정(NOT) 연산자
 * 						!참 => 거짓
 * 						!거짓 => 참
 * 
 * 
 * 				2) 비트 논리연산자
 * 					ㄱ. & 비트논리 AND 연산자
 * 					ㄴ. | 비트논리 OR 연산자
 * 					ㄷ. ^ XOR 연산자 == e[X]clusive 배타적인
 *                 ㄹ. ~ 틸드연산자 (비트부정연산자), [단항 연산자]
 *
 */

public class Ex05_04 {

	public static void main(String[] args) {

		System.out.println(10 & 3);
		// 0000 1010
		// 0000 0011
		// 0000 0010 = 2 (둘다 참이면 참)

		System.out.println(10 | 3);
		// 0000 1010
		// 0000 0011
		// 0000 1011 = 11 (하나라도 참이면 나머지도 참)

		System.out.println(10 ^ 3);
		// 0000 1010
		// 0000 0011
		// 0000 1001 =9 (서로 다르면 참)
		
		System.out.println(~10); //틸드
		// 0000 1010
		// 1111 0101
		// 1111 0100 1뻄
		// 0000 1011 
		// -11
	


		/*
		// The operator ! is undefined for the argument type(s) int (인티저에 참/거짓이 아닌 인티저가 와서 나는 에러)
		// >(비교연산자)   논리연산의 우선순위가 높다 = 먼저 처리함    !(논리연산)
		// System.out.println(!3>5); // 부정연산자 !가 우선순위가 더 높아서 생기는 오류이다.




		// Dead code 경고
		System.out.println(3>5 && 100>1); // 첫 번째 항이 거짓이면 뒤에는 연산 안하고 넘어감
		System.out.println(3<5 && 100>1);

		System.out.println(3<5 || 100>1);
		 */






	}

}
