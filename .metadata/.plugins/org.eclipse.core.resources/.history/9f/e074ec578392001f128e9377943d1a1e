package days04;

/**
 * @author jyoon
 * @date 2024. 7. 4. - 오전 11:03:06
 * @subject 인덱스 연산자
 * @content   []
 *
 */

public class Ex05 {
	
	public static void main(String[] args) {
		// 한 학생의 국어 점수를 저장할 변수를 선언
		// int kor
		
		// 5천명 학생의 국어 점수를 저장할 변수를 선언

		// [배열] 
		// 1. 배열의 정의: 동일한 자료형 + 메모리상에 연속적으로 놓이게 한 것

		// 2. 배열의 선언 형식
		//     타입[] 배열명 = new 타입[배열크기]; // 변수, 참조변수, 배열명
		//	    타입 배열명 [] = new 타입[배열크기]; // 타입을 뒤로해도 상관 없지만 보통 위에거로 함
		
		// 3. 참조타입
		// int [] kors = new int[3];
		// ㄱ. 배열 선언 부분
		int [] kors;
		kors = new int[3];

		// 메모리는 3가지의 영역으로 나뉜다 스택, 힙
		// 							 	                      스택(stack) 영역
		//      시작 주소값 참조                       ---> [0x100]
		//							                      |	       kors
		// 동적(heap) 영역 	                      |
		//   첨자값(index)		                      |
		// 0번째 요소 1번째 요소 2번째 요소		  |
		// [4바이트][4b][4b]	                      |
		// 시작주소값   -------------------------
		// 0x100  104번지  108번지 // 시작 주소 값을 알면 다음 번지 주소 값을 알 수 있다.
		
		// 배열명[첨자값]
		kors[0] = 100;
		kors[1] = 90;
	    kors[2] = 20; // 내부의 012를 인덱스 값 한국어로 첨자값이라고 한다.
		
	    System.out.println(kors[0]);
	    System.out.println(kors[1]);
	    System.out.println(kors[2]);  // 동일한 자료형이 여러개 있을때 배열로 쓰면 된다.
	    
	    // 배열 크기가 궁금하다? 암기: 배열명.length
	    System.out.println(kors.length);
	    
	    // 배열의 가장 작은 첨자값(index) == lowerbound = 0이다. 
	    // 배열의 가장 큰 첨자값(index) == upperBound = kors.length - 1 
	    
	    // [주의할 점]
	    // java.lang.ArrayIndexOutOfBoundsException 없는 방에 넣으려고 하니 발생하는 오류
	    kors[3] = 99; // 실행 오류 런타임 오류
	    
	    
	    
	}

}
