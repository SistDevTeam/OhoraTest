package days22;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;

public class Ex02_06 { // [문제] 하나의 파일이 너무 커서 10KB 단위로 파일을 잘라서 분리하고자 한다.

	public static void main(String[] args) {
		// 85.86KB

		String parent = ".\\src\\days22";

		String child = "시간표_(5강의실)(디지털컨버전스)AWS 클라우드와 Kafka를 활용한 Java(자바) Full-Stack 개발자 양성과정(E).xlsx";


		
		// 파일을 일단 읽음. 10KB까지 읽었을때 다른 파일명으로 저장하는 걸 반복한다. 끝날때 까지

		// 10KB 	~~양성과정(E)_1.xlsx
		// 10KB 	~~양성과정(E)_2.xlsx
		// 10KB 	~~양성과정(E)_3.xlsx
		// 10KB 	~~양성과정(E)_4.xlsx
		//				 			 :

		File file = new File(parent, child);
		System.out.println("> 파일 크기 : " + file.length() + "(bytes))");

		final int VOLUME = 10* 1024; // 10KB

		String baseName = getBaseFileName(child); // ~~~
		String ext = getExtension(child); // .xlsx

		FileOutputStream fos = null; // try catch안에서 자동 close되도록 생성
		BufferedOutputStream bos = null; // try catch안에서 자동 close되도록 생성

		int code = 0;
		int index = 0; // 양성과정(E)_3(이걸 index로).xlsx
		int i = 0; // 읽어온 바이트 수

		try(FileInputStream fis = new FileInputStream(file);
				BufferedInputStream bis = new BufferedInputStream(fis); )  {

			while ( (code = bis.read()) != -1 ) { // 실제 읽어온 바이트 값
				if (i%VOLUME == 0) {
					if (i!=0) bos.close(); // 파일 저장 // 문제: 안떨어지면 저장이 안됨, 나누어 떨어지지 않아도 더이상 없으면 while 문을 나와서 저장 할까? bos.close()로 해결
						
					// 양성과정(E)_1.xlsx
					child = String.format("%s_%d%s", baseName, ++index ,ext); // 순수하게 새로 저장될 파일 이름
					
					File temp = new File(parent,child);
					fos = new  FileOutputStream(temp);
					bos = new BufferedOutputStream(fos);
				
				}

				bos.write(code);
				i++;
				
			} // while
			
			bos.close();

		} catch (Exception e) {
			e.printStackTrace();
		}




	} // main





	// 확장자를 반환하는 메서드
	public static String getExtension(String fileName) {
		int pos = fileName.indexOf(".");
		return fileName.substring(pos);	
	}


	// 확장자를 제외한 순수한 파일명을 반환하는 메서드
	public static String getBaseFileName(String fileName) {
		int pos = fileName.indexOf(".");
		return fileName.substring(0,pos);
	}






} // class
