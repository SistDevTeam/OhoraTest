package days12;

public class Ex03 {

	public static void main(String[] args) {
		
		// 지역변수(멤버변수(필드)가 아님)는 접근지정자 붙여서는 안된다.
		// public int age = 10;
		
		// 배열
		int [] m = null; // 주소를 참조하지 않겠다는 의미 = null
		m = new int [3];
		m[0] = 10;
		
		
		// new는 힙이라는 동적 영역에 메모리를 할당 하는 것
		//											stack (공간이 할당되지 않은 상태였지만, 주소 값이 들어감)
		//	[0][0][0]						  [0x100]
		// 0x100							    m 변수, 참조변수, 배열명
		
		
		// t1 객체는 무엇이냐? 클래스를 자료형으로 선언된 참조변수
		//											[   	]
		//											  t1 변수, 참조변수, 객체
		Tv t1; // t1은 클래스를 자료형으로 선언된 객체이다.
		// 객체라고 부른다. 근데 밑에 실제 new Tv()가 만들어지면 인스턴스화 되어진다.
		
		// 그럼 인스턴스란 무엇인가?
		// new Tv(); // 인스턴스화한 코딩 == 생성된 객체 (new는 힙이라는 동적 영역에 메모리를 할당 하는 것)
		
		
		
		t1 = new Tv(); // 생성된 객체(존재하지 않는다 매핑이 불가능), 인스턴스화 		   
		
		// 인스턴스(new연산자여서 힙영역에 생성된 객체)									   객체(주소값만 갖는 참조변수)
		// 힙영역 [power][channel][color][p()][cu()][cd()] 						[0x200]
		//	0x200															    				 t1 변수, 참조변수, 객체				
		// 함수코드 영역
		// power()
		// channelUp()
		// channelDown()
	
		// 멤버들을 접근하는 방법: 객체명.필드명, 객체명.메서드명()
		// Tv. 클래스명.
		
		t1.power();
		System.out.println(t1.power ? "0":"X'");
		
		t1.channel = 10;
		System.out.println(t1.channel);
		
		t1.channelDown(); // 9
		System.out.println(t1.channel);
		
		t1.power();
		System.out.println(t1.power ? "0":"X");
		
		
	} // main

} // class
